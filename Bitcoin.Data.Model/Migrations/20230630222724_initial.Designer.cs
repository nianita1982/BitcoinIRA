// <auto-generated />
using System;
using Bitcoin.Data.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bitcoin.Data.Model.Migrations
{
    [DbContext(typeof(BitcoinDbContext))]
    [Migration("20230630222724_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bitcoin.Data.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsOrganic")
                        .HasColumnType("bit");

                    b.Property<string>("Measure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 0.67m,
                            IsOrganic = true,
                            Measure = "clover",
                            Name = "Garlic",
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Cost = 2.03m,
                            IsOrganic = false,
                            Measure = "unit",
                            Name = "Lemon",
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Cost = 0.87m,
                            IsOrganic = false,
                            Measure = "cup",
                            Name = "Corn",
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            Cost = 2.19m,
                            IsOrganic = false,
                            Measure = "prey",
                            Name = "Chicken",
                            Type = 2
                        },
                        new
                        {
                            Id = 5,
                            Cost = 0.24m,
                            IsOrganic = false,
                            Measure = "slice",
                            Name = "Bacon",
                            Type = 2
                        },
                        new
                        {
                            Id = 6,
                            Cost = 0.31m,
                            IsOrganic = false,
                            Measure = "ounce",
                            Name = "Pasta",
                            Type = 3
                        },
                        new
                        {
                            Id = 7,
                            Cost = 1.92m,
                            IsOrganic = false,
                            Measure = "cup",
                            Name = "Olive Oil",
                            Type = 3
                        },
                        new
                        {
                            Id = 8,
                            Cost = 1.26m,
                            IsOrganic = false,
                            Measure = "cup",
                            Name = "Vinegar",
                            Type = 3
                        },
                        new
                        {
                            Id = 9,
                            Cost = 0.16m,
                            IsOrganic = false,
                            Measure = "teaspoon",
                            Name = "Salt",
                            Type = 3
                        },
                        new
                        {
                            Id = 10,
                            Cost = 0.17m,
                            IsOrganic = false,
                            Measure = "teaspoon",
                            Name = "Pepper",
                            Type = 3
                        });
                });

            modelBuilder.Entity("Bitcoin.Data.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalTax")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "3"
                        });
                });

            modelBuilder.Entity("Bitcoin.Data.Entities.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1m,
                            IngredientId = 1,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1m,
                            IngredientId = 2,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 0.75m,
                            IngredientId = 7,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 0.75m,
                            IngredientId = 9,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 5,
                            Amount = 0.5m,
                            IngredientId = 10,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 6,
                            Amount = 1m,
                            IngredientId = 1,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 7,
                            Amount = 4m,
                            IngredientId = 3,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 8,
                            Amount = 4m,
                            IngredientId = 5,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 9,
                            Amount = 8m,
                            IngredientId = 6,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 10,
                            Amount = 0.33m,
                            IngredientId = 7,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 11,
                            Amount = 1.25m,
                            IngredientId = 9,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 12,
                            Amount = 0.75m,
                            IngredientId = 10,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 13,
                            Amount = 1m,
                            IngredientId = 1,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 14,
                            Amount = 4m,
                            IngredientId = 4,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 15,
                            Amount = 0.5m,
                            IngredientId = 7,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 16,
                            Amount = 0.5m,
                            IngredientId = 8,
                            RecipeId = 2
                        });
                });

            modelBuilder.Entity("Bitcoin.Data.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("Bitcoin.Data.Entities.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bitcoin.Data.Entities.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Bitcoin.Data.Entities.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("Bitcoin.Data.Entities.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
